{"version":3,"sources":["components/header/header.tsx","dnd-types/item-types.ts","components/word-card/word-card.tsx","store/selector.ts","store/actions.ts","utils.tsx","components/checking-area/checking-area.tsx","components/source-area/source-area.tsx","components/example-area/example-text.tsx","components/example-area/example-area.tsx","components/check-button/speak-button.tsx","components/check-button/check-button.tsx","App.tsx","mocks/cards.js","store/reducer/word-reducer.tsx","store/reducer/root-reducer.tsx","index.tsx"],"names":["Title","styled","h1","props","isHighlighted","Header","CardType","WordContainer","div","WordCard","memo","id","text","moveCard","findCard","originalIndex","index","useDrag","type","item","collect","monitor","opacity","isDragging","end","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","ref","node","style","getBaseCards","state","cards","baseCards","getSourceCards","sourceCards","getCheckCards","checkCards","getOriginText","originText","createUserKeySelector","createSelector","Number","map","it","join","createTextForSpeechSelector","ActionType","addWordToCheckArea","createAction","card","payload","addWordToSourceArea","moveWordInsideSourceArea","newIndex","moveWordInsideCheckArea","find","indexOf","CheckingContainer","LineWrapper","topPosition","linesPositions","CheckingArea","useSelector","dispatch","useDispatch","moveWordInsideCheckAreaAction","useCallback","findCheckCard","atIndex","originCard","filter","findOriginCard","addWordToCheckAreaAction","ind","width","height","viewBox","fill","xmlns","d","stroke","strokeLinecap","SourceContainer","SourceArea","moveWordInsideSourceAreaAction","findSourceCard","addWordToSourceAreaAction","ExampleTextWrapper","OriginText","TextCloud","ExampleText","strokeWidth","ExampleWrapper","ExampleArea","SpeakButton","volume","vol","ButtonWrapper","Button","button","BaseMessage","ErrorMessage","CorrectMessage","CheckButton","messageTimeout","userKey","textForSpeech","controlKey","correctAnswerKey","useState","errorOpacity","correctOpacity","messageOpacity","setMessageOpacity","sayElementStyles","display","position","top","right","disabled","name","onClick","clearTimeout","prevState","setTimeout","validateUserMessage","className","MainWrapper","App","mockCards","updateWordsList","words","word","newList","slice","activeCardIndex","findIndex","splice","removeWordFromList","initState","wordCardReducer","createReducer","builder","addCase","action","length","addWordToList","sort","a","b","addWordToListWithSorting","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.54c05c46.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface TitleProps {\n\treadonly isHighlighted?: boolean;\n\t}\n\nconst Title = styled.h1<TitleProps>`\n\tfont-style: normal;\n\tfont-weight: ${props => props.isHighlighted ? \"bold\" : \"normal\"};\n\tfont-size: 36px;\n\tline-height: 42px;\n\tcolor: #252525;\n\ttext-shadow: -2px -4px 3px #FFFFFF, 2px 4px 3px rgba(0, 0, 0, 0.25);\n\talign-self: flex-start;\n\tmargin-bottom: 56px;\n`;\n\nexport default function Header(props: { isHighlighted?: boolean; }) {\n\treturn (\n\t\t<Title isHighlighted = {props.isHighlighted}>Translate this sentence</Title>\n\t);\n}","export const CardType = {\n\tWORD: 'word',\n}","import { FC, memo } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport styled from 'styled-components';\n\nimport { CardType } from \"../../dnd-types/item-types\";\n\nconst WordContainer = styled.div`\n\tpadding: 5px 18px;\n\tmargin-bottom: 15px;\n\tmargin-right: 10px;\n\tcursor: move;\n\tdisplay: block;\n\tfont-size: 18px;\n\tline-height: 21px;\n\tfont-weight: normal;\n\tcolor: #000000;\n\tborder: 1px solid #C9C9C9\n\tmargin-right: 10px;\n\theight: 30px;\n\tbox-sizing: border-box;\n\tbackground: #FFFFFF;\n\tbox-shadow: 0px 8px 4px -6px rgba(0, 0, 0, 0.25);\n\tborder-radius: 13px;\n`;\n\nexport interface CardProps {\n\tid: number;\n\ttext: string;\n\tmoveCard: (id: number, to: number) => void;\n\tfindCard: (id: number) => { index: number };\n}\n\ninterface Item {\n\tid: number;\n\toriginalIndex: number;\n}\n\nexport const WordCard: FC<CardProps> = memo(function Card({id, text, moveCard, findCard}) {\n\tconst originalIndex = findCard(id).index;\n\tconst [{ opacity }, drag] = useDrag(\n\t\t() => ({\n\t\t\ttype: CardType.WORD,\n\t\t\titem: { id, originalIndex },\n\t\t\tcollect: (monitor) => ({\n\t\t\t\topacity: monitor.isDragging() ? 0 : 1\n\t\t\t}),\n\t\t\tend: (item, monitor) => {\n\t\t\t\tconst { id: droppedId, originalIndex } = item;\n\t\t\t\tconst didDrop = monitor.didDrop();\n\t\t\t\tif (!didDrop) {\n\t\t\t\t\tmoveCard(droppedId, originalIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\t[id, originalIndex, moveCard]\n\t);\n\n\tconst [, drop] = useDrop(\n\t\t() => ({\n\t\t\taccept: CardType.WORD,\n\t\t\tcanDrop: () => false,\n\t\t\thover({ id: draggedId }: Item) {\n\t\t\t\tif (draggedId !== id) {\n\t\t\t\t\tconst { index: overIndex } = findCard(id);\n\t\t\t\t\tmoveCard(draggedId, overIndex);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\t[findCard, moveCard]\n\t);\n\n\treturn (\n\t\t<WordContainer ref={(node) => drag(drop(node))} style = {{opacity}}>\n\t\t\t{text}\n\t\t</WordContainer>\n\t);\n});","import { createSelector } from 'reselect';\n\nexport const getBaseCards = (state: any) => state.cards.baseCards;\nexport const getSourceCards = (state: any) => state.cards.sourceCards;\nexport const getCheckCards = (state: any) => state.cards.checkCards;\nexport const getOriginText = (state: any) => state.cards.originText;\n\nexport const createUserKeySelector = createSelector(\n\tgetCheckCards,\n\t(cards: any) => Number(cards.map((it: any) => it.id).join('')\n));\n\nexport const createTextForSpeechSelector = createSelector(\n\tgetCheckCards,\n\t(cards: any) => cards.map((it: any) => it.text).join(' ')\n);","import {createAction} from '@reduxjs/toolkit';\n\nexport const ActionType = {\n\tWORD_TO_CHECK: 'data/moveWordToCheckArea',\n\tWORD_TO_SOURCE: 'data/moveWordToSourceArea',\n\tWORD_INTO_CHECK: 'data/moveWordInsideCheckArea',\n\tWORD_INTO_SOURCE: 'data/moveWordInsideSourceArea',\n};\n\nexport const addWordToCheckArea = createAction(ActionType.WORD_TO_CHECK, (card) => ({\n\tpayload: {card},\n}));\n\nexport const addWordToSourceArea = createAction(ActionType.WORD_TO_SOURCE, (card) => ({\n\tpayload: {card},\n}));\n\nexport const moveWordInsideSourceArea = createAction(ActionType.WORD_INTO_SOURCE, (card, newIndex) => ({\n\tpayload: {card, newIndex},\n}));\n\nexport const moveWordInsideCheckArea = createAction(ActionType.WORD_INTO_CHECK, (card, newIndex) => ({\n\tpayload: {card, newIndex},\n}));\n\n\n","\nexport interface SingleWord {\n  readonly id: number,\n\treadonly text: string,\n}\n\nexport const findCard = (id: number, cards: []): {card: SingleWord | undefined, index: number} => {\n\tconst card = cards.find((it: SingleWord) => it.id === id);\n\tconst index = card ? cards.indexOf(card) : -1;\n\treturn {card, index}\n}","import { FC, memo, useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport { WordCard } from '../word-card/word-card';\nimport { CardType } from '../../dnd-types/item-types';\nimport {getBaseCards, getCheckCards} from '../../store/selector';\nimport {moveWordInsideCheckArea, addWordToCheckArea} from '../../store/actions';\nimport {findCard, SingleWord} from '../../utils';\n\nconst CheckingContainer = styled.div`\n\twidth: 100%;\n\tmin-height: 100px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tmargin-bottom: 40px;\n\tposition: relative\n`;\n\nconst LineWrapper = styled.div<{topPosition: string}>`\n\tposition: absolute;\n\ttop: ${(props) => props.topPosition};\n\tleft: 0;\n`;\n\nconst linesPositions: string[] = ['-25px', '25px', '75px'];\n\nexport const CheckingArea: FC = memo(function CheckingArea() {\n\tconst baseCards = useSelector(getBaseCards);\n\tconst checkCards = useSelector(getCheckCards);\n\n\tconst dispatch = useDispatch();\n\n\tconst addWordToCheckAreaAction = (card: SingleWord): void => {\n\t\tdispatch(addWordToCheckArea(card));\n\t};\n\n\tconst moveWordInsideCheckAreaAction = useCallback((card: SingleWord | undefined, newIndex: number) => {\n\t\tdispatch(moveWordInsideCheckArea(card, newIndex));\n\t},[dispatch])\n\n\tconst findOriginCard = (id: number): {originCard: SingleWord, index: number} => {\n\t\tconst originCard = baseCards.filter((it: SingleWord) => it.id === id)[0]\n\t\treturn {\n\t\t\toriginCard,\n\t\t\tindex: baseCards.indexOf(originCard),\n\t\t}\n\t}\n\n\tconst findCheckCard = useCallback((id: number)=> findCard(id, checkCards), [checkCards]);\n\n\tconst moveCard = useCallback((id: number, atIndex: number): void => {\n\t\t\tconst {card} = findCheckCard(id);\n\n\t\t\tif (card) {\n\t\t\t\tmoveWordInsideCheckAreaAction(card, atIndex);\n\t\t\t}\n\t\t},\n\t\t[findCheckCard, moveWordInsideCheckAreaAction],\n\t)\n\n\tconst [, drop] = useDrop(() => ({ \n\t\taccept: CardType.WORD ,\n\t\tdrop(item: SingleWord) {\n\t\t\tconst {card} = findCheckCard(item.id);\n\t\t\tif (!card) {\n\t\t\t\tconst {originCard} = findOriginCard(item.id);\n\t\t\t\taddWordToCheckAreaAction(originCard);\n\t\t\t}\n\t\t\treturn undefined\n\t\t}\n\t}),\n\t[checkCards]);\n\n\treturn (\n\t\t<CheckingContainer ref={drop}>\n\t\t\t{linesPositions.map((it, ind) => (\n\t\t\t\t<LineWrapper topPosition = {it} key = {ind} /*lines are static*/> \n\t\t\t\t<svg width=\"478\" height=\"2\" viewBox=\"0 0 478 2\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M1 1H483\" stroke=\"#4B4B4B\" strokeLinecap=\"round\"/>\n\t\t\t\t</svg>\n\t\t\t</LineWrapper>\n\t\t\t))}\n\t\t\t{checkCards.map((card: any) => (\n\t\t\t\t<WordCard\n\t\t\t\t\tkey={card.id}\n\t\t\t\t\tid={card.id}\n\t\t\t\t\ttext={card.text}\n\t\t\t\t\tmoveCard={moveCard}\n\t\t\t\t\tfindCard={findCheckCard}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</CheckingContainer>\n\t)\n})","import { FC, memo, useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport { WordCard } from '../word-card/word-card';\nimport { CardType } from '../../dnd-types/item-types';\nimport {getSourceCards, getBaseCards} from '../../store/selector';\nimport {moveWordInsideSourceArea, addWordToSourceArea} from '../../store/actions';\nimport {findCard, SingleWord} from '../../utils';\n\nconst SourceContainer = styled.div`\n\twidth: 95%;\n\tmin-height: 125px;\n\tpadding: 10px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tmargin-bottom: 70px;\n\tbox-sizing: border-box;\n\tborder: 2px solid #4B4B4B;\n\tborder-radius: 15px;\n`;\n\nexport const SourceArea: FC = memo(function SourceArea() {\n\tconst sourceCards = useSelector(getSourceCards);\n\tconst baseCards = useSelector(getBaseCards);\n\n\tconst dispatch = useDispatch();\n\tconst moveWordInsideSourceAreaAction = useCallback((card: SingleWord | undefined, newIndex: number) => {\n\t\tdispatch(moveWordInsideSourceArea(card, newIndex));\n\t},[dispatch])\n\n\tconst addWordToSourceAreaAction = (card: SingleWord) => {\n\t\tdispatch(addWordToSourceArea(card));\n\t};\n\n\tconst findSourceCard = useCallback((id) => findCard(id, sourceCards),[sourceCards]);\n\n\tconst findOriginCard = (id: number) => {\n\t\tconst originCard = baseCards.filter((it: SingleWord) => it.id === id)[0]\n\t\treturn {\n\t\t\toriginCard,\n\t\t\tindex: baseCards.indexOf(originCard),\n\t\t}\n\t};\n\n\tconst moveCard = useCallback((id: number, atIndex: number) => {\n\t\t\tconst {card} = findSourceCard(id);\n\t\t\t\n\t\t\tif (card) {\n\t\t\t\tmoveWordInsideSourceAreaAction(card, atIndex);\n\t\t\t}\n\t\t},\n\t\t[findSourceCard, moveWordInsideSourceAreaAction],\n\t)\n\n\tconst [, drop] = useDrop(() => ({ \n\t\taccept: CardType.WORD ,\n\t\tdrop(item: SingleWord) {\n\t\t\tconst {card} = findSourceCard(item.id);\n\t\t\tif (!card) {\n\t\t\t\tconst {originCard} = findOriginCard(item.id);\n\t\t\t\taddWordToSourceAreaAction(originCard);\n\t\t\t}\n\t\t\treturn undefined\n\t\t}\n\t}),\n\t[sourceCards]);\n\n\treturn (\n\t\t<SourceContainer ref={drop}>\n\t\t\t{sourceCards.map((card: SingleWord) => (\n\t\t\t\t<WordCard\n\t\t\t\t\tkey={card.id}\n\t\t\t\t\tid={card.id}\n\t\t\t\t\ttext={card.text}\n\t\t\t\t\tmoveCard={moveCard}\n\t\t\t\t\tfindCard={findSourceCard}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</SourceContainer>\n\t)\n})","import React from 'react';\nimport styled from 'styled-components';\nimport {useSelector} from 'react-redux';\n\nimport {getOriginText} from '../../store/selector';\n\nconst ExampleTextWrapper = styled.div`\n\tposition: relative;\n\tmax-width: 50%;\n`;\n\nconst OriginText = styled.div`\n\tfont-style: normal;\n\tfont-weight: 400;\n\tfont-size: 18px;\n\tline-height: 21px;\n\tcolor: #000000;\n\tmargin-left: 10px;\n\tmargin-top: 10px;\n\ttext-decoration: underline dotted;\n`;\n\nconst TextCloud = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: -25px;\n`;\n\nexport function ExampleText() {\n\tconst originText = useSelector(getOriginText);\n\n\treturn (\n\t\t<ExampleTextWrapper>\n\t\t\t<OriginText>{originText.text}</OriginText>\n\t\t\t<TextCloud>\n\t\t\t\t<svg width=\"307\" height=\"92\" viewBox=\"0 0 307 92\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M19.9254 63.2936L1.73257 81.2645C1.09664 81.8926 1.54146 82.9759 2.43533 82.9759H19.8214C20.043 82.9759 20.2226 83.1555 20.2226 83.3771C20.2226 87.5871 23.6355 91 27.8455 91H287C297.493 91 306 82.4934 306 72V20C306 9.50659 297.493 1 287 1H39.2226C28.7292 1 20.2226 9.50659 20.2226 20V62.5822C20.2226 62.8495 20.1156 63.1057 19.9254 63.2936Z\" stroke=\"#252525\" strokeWidth=\"2\"/>\n\t\t\t\t</svg>\n\t\t\t</TextCloud>\n\t\t</ExampleTextWrapper>\n\t);\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport {ExampleText} from './example-text';\n\nconst ExampleWrapper = styled.div`\n\twidth: 100%;\n\tmargin-bottom: 50px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n`;\n\nexport default function ExampleArea() {\n\treturn (\n\t\t<ExampleWrapper>\n\t\t\t<svg width=\"187\" height=\"200\" viewBox=\"0 0 187 200\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path d=\"M151 57C151 88.4802 125.48 114 94 114C62.5198 114 37 88.4802 37 57C37 25.5198 62.5198 0 94 0C125.48 0 151 25.5198 151 57Z\" fill=\"#6C6C6C\"/>\n\t\t\t\t<path d=\"M186.24 187.526C187.081 194.1 181.627 199.5 175 199.5H12C5.37256 199.5 -0.0808166 194.1 0.75958 187.526C6.63802 141.542 45.9184 106 93.5 106C141.082 106 180.362 141.542 186.24 187.526Z\" fill=\"#6C6C6C\"/>\n\t\t\t</svg>\n\t\t\t<ExampleText/>\n\t\t</ExampleWrapper>\n\t);\n}","import { SayButton } from 'react-say';\n\ninterface SpeakProps {\n\ttext: string;\n\tvol: number;\n}\n\nconst SpeakButton = (props: SpeakProps) =>\n\t<SayButton\n\t\ttext={props.text}\n\t\tvolume = {props.vol}\n\t>\n\t\tClick to listen\n\t</SayButton>\n\nexport default SpeakButton;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {useSelector} from 'react-redux';\n\nimport {getOriginText, createUserKeySelector, createTextForSpeechSelector} from '../../store/selector';\nimport SpeakButton from './speak-button';\n\nconst ButtonWrapper = styled.div`\n\twidth: 100%;\n\tmargin-bottom: 50px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tposition: relative;\n`;\n\nconst Button = styled.button`\n\twidth: 470px;\n\theight: 68px;\n\tfont-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\tfont-style: normal;\n\tfont-weight: bold;\n\tfont-size: 18px;\n\tline-height: 21px;\n\ttext-align: center;\n\tcolor: #000000;\n\tborder-radius: 88px;\n\tborder: 1px solid #C9C9C9;\n\tbox-sizing: border-box;\n\tbackground: linear-gradient(91.2deg, #FFFFFF 0%, #F2F2F2 100%);\n\tbox-shadow: -2px -4px 8px #FFFFFF, 2px 4px 8px rgba(0, 0, 0, 0.2);\n\tcursor: pointer;\n\topacity: 1;\n\tmargin-top: 10px;\n\n\t&:active {\n\t\tbackground: linear-gradient(91.2deg, #FFFFFF 0%, #F2F2F2 100%);\n\t\tbox-shadow: inset -2px -4px 12px #FFFFFF, inset 2px 4px 8px rgba(0, 0, 0, 0.2);\n\t}\n\n\t&:disabled {\n\t\topacity: 0.5;\n\t\tcursor: auto;\n\t}\n`;\n\nconst BaseMessage = styled.div<{opacity: string}>`\n\tposition: absolute;\n\ttop: -55px;\n\tfont-style: normal;\n\tfont-weight: normal;\n\tfont-size: 24px;\n\tline-height: 28px;\n\tmargin-bottom: 27px;\n\topacity: ${(props) => props.opacity};\n\ttext-shadow: -1px -2px 2px #FFFFFF, 1px 2px 2px rgba(91, 13, 13, 0.5);\n`;\n\nconst ErrorMessage = styled(BaseMessage)`\n\tcolor: #FF0000;\n`;\n\nconst CorrectMessage = styled(BaseMessage)`\n\tcolor: green;\n`;\n\nexport function CheckButton() {\n\tconst originText = useSelector(getOriginText);\n\tconst userKey = useSelector(createUserKeySelector);\n\tconst textForSpeech = useSelector(createTextForSpeechSelector);\n\tconst controlKey = originText.correctAnswerKey;\n\n\tconst [messageOpacity, setMessageOpacity] = useState({\n\t\terrorOpacity: '0',\n\t\tcorrectOpacity: '0',\n\t});\n\n\tconst sayElementStyles = {\n\t\tdisplay: messageOpacity.correctOpacity === '1' ? 'block' : 'none',\n\t}\n\n\tlet messageTimeout: any;\n\n\tconst validateUserMessage = (controlKey: number, userKey: number): void => {\n\t\tif (controlKey === userKey) {\n\t\t\t// console.log(\"correct answer!\");\n\t\t\tsetMessageOpacity((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tcorrectOpacity: '1',\n\t\t\t\terrorOpacity: '0',\n\t\t\t}));\n\t\t\t// messageTimeout = setTimeout(() => {\n\t\t\t// \tsetMessageOpacity((prevState) => ({\n\t\t\t// \t\t...prevState,\n\t\t\t// \t\terrorOpacity: '0',\n\t\t\t// \t\tcorrectOpacity: '0',\n\t\t\t// \t}));\n\t\t\t// }, 2500);\n\t\t} else {\n\t\t\t// console.log(\"wrong answer!\");\n\t\t\tsetMessageOpacity((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\terrorOpacity: '1',\n\t\t\t\tcorrectOpacity: '0',\n\t\t\t}));\n\t\t\tmessageTimeout = setTimeout(() => {\n\t\t\t\tsetMessageOpacity((prevState) => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\terrorOpacity: '0',\n\t\t\t\t\tcorrectOpacity: '0',\n\t\t\t\t}));\n\t\t\t}, 2000);\n\t\t}\n\t}\n\n\tconst handleButtonClick = (): void => {\n\t\tclearTimeout(messageTimeout);\n\t\tvalidateUserMessage(controlKey, userKey);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div style = {{display: sayElementStyles.display, position: 'absolute', top: '82%', right: '40%'}}>\n\t\t\t\t<SpeakButton vol = {1} text = {textForSpeech}/>\n\t\t\t</div>\n\t\t\t<ButtonWrapper>\n\t\t\t\t<ErrorMessage opacity = {messageOpacity.errorOpacity}>Something wrong!</ErrorMessage>\n\t\t\t\t<CorrectMessage opacity = {messageOpacity.correctOpacity}>The answer is correct!</CorrectMessage>\n\t\t\t\t<Button disabled = {userKey === 0} name=\"checkButton\" onClick = {handleButtonClick} className = 'check-button'>Check</Button>\n\t\t\t</ButtonWrapper>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './components/header/header';\nimport {CheckingArea} from './components/checking-area/checking-area';\nimport {SourceArea} from './components/source-area/source-area';\nimport ExampleArea from './components/example-area/example-area';\nimport {CheckButton} from './components/check-button/check-button';\n\nconst MainWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tmargin: 0 auto 0 auto;\n\twidth: 482px;\n\tbackground: #E5E5E5;\n\tbox-sizing: border-box;\n\tfont-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\tborder: 2px solid #4B4B4B;\n\tborder-radius: 15px;\n\tposition: relative;\n`;\n\nfunction App() {\n\treturn (\n\t\t<MainWrapper>\n\t\t\t<Header/>\n\t\t\t<ExampleArea/>\n\t\t\t<CheckingArea/>\n\t\t\t<SourceArea/>\n\t\t\t<CheckButton/>\n\t\t</MainWrapper>\n\t\t);\n\t}\n\nexport default App;\n","export const mockCards = [\n  {\n\t\tid: 1,\n\t\ttext: 'ago',\n\t},\n\t{\n\t\tid: 2,\n\t\ttext: 'made',\n\t},\n\t{\n\t\tid: 3,\n\t\ttext: 'Skyrim',\n\t},\n\t{\n\t\tid: 4,\n\t\ttext: 'ten',\n\t},\n\t{\n\t\tid: 5,\n\t\ttext: 'two',\n\t},\n\t{\n\t\tid: 6,\n\t\ttext: 'was',\n\t},\n\t{\n\t\tid: 7,\n\t\ttext: 'were',\n\t},\n\t{\n\t\tid: 8,\n\t\ttext: 'year',\n\t},\n\t{\n\t\tid: 9,\n\t\ttext: 'years',\n\t},\n];\n\nexport const mockOriginText = {\n\tcorrectAnswerKey: 362491,\n\ttext: 'Игра Скайрим вышла десять лет назад',\n};","import {createReducer} from '@reduxjs/toolkit';\n// import { idText } from 'typescript';\n\nimport {addWordToCheckArea, addWordToSourceArea, moveWordInsideSourceArea, moveWordInsideCheckArea} from '../actions';\nimport {mockCards, mockOriginText} from '../../mocks/cards';\n\nexport interface SingleWord {\n\tid: number,\n\ttext: string,\n}\n\nfunction updateWordsList(words: SingleWord[], word: SingleWord, newIndex: number) {\n\tconst newList = words.slice();\n\tconst activeCardIndex = newList.findIndex((it) => it.id === word.id);\n\tnewList.splice(activeCardIndex, 1);\n\tnewList.splice(newIndex, 0, word);\n\treturn newList;\n}\n\nfunction addWordToList(words: SingleWord[] | [], word: SingleWord) {\n\tconst newList = words.slice();\n\tconst newIndex = words.length ? words.length : 0;\n\tnewList.splice(newIndex, 0, word);\n\treturn newList;\n}\n\nfunction addWordToListWithSorting(words: SingleWord[] | [], word: SingleWord) {\n  const newList = words.slice();\n\tconst newIndex = words.length ? words.length : 0;\n\tnewList.splice(newIndex, 0, word);\n\n\tnewList.sort((a, b) => {\n\t\tif (a.id > b.id) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.id < b.id) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn newList;\n}\n\nfunction removeWordFromList(words: SingleWord[], word: SingleWord) {\n  const newList = words.slice();\n\tconst activeCardIndex = newList.findIndex((it) => it.id === word.id);\n\tnewList.splice(activeCardIndex, 1);\n\treturn newList;\n}\n\nconst initState: {baseCards: any, sourceCards: any, checkCards: any, originText: any} = {\n\toriginText: mockOriginText,\n\tbaseCards: mockCards,\n\tsourceCards: mockCards,\n\tcheckCards : []\n}\n\nconst wordCardReducer = createReducer(initState, (builder) => {\n\tbuilder\n\t\t.addCase(addWordToCheckArea, (state, action) => {\n\t\t\tstate.checkCards = addWordToList(state.checkCards, action.payload.card)\n\t\t\tstate.sourceCards = removeWordFromList(state.sourceCards, action.payload.card)\n\t\t})\n\t\t.addCase(addWordToSourceArea, (state, action) => {\n\t\t\tstate.sourceCards = addWordToListWithSorting(state.sourceCards, action.payload.card)\n\t\t\tstate.checkCards = removeWordFromList(state.checkCards, action.payload.card)\n\t\t})\n\t\t.addCase(moveWordInsideSourceArea, (state, action) => {\n\t\t\tstate.sourceCards = updateWordsList(state.sourceCards, action.payload.card, action.payload.newIndex);\n\t\t})\n\t\t.addCase(moveWordInsideCheckArea, (state, action) => {\n\t\t\tstate.checkCards = updateWordsList(state.checkCards, action.payload.card, action.payload.newIndex);\n\t\t});\n});\n\nexport default wordCardReducer;","import { combineReducers } from 'redux';\nimport {configureStore} from '@reduxjs/toolkit';\n\nimport wordCardReducer from './word-reducer';\n\nconst rootReducer = combineReducers({\n\tcards: wordCardReducer,\n});\n\nconst store = configureStore({\n\treducer: rootReducer,\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport {Provider} from 'react-redux';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport store from './store/reducer/root-reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<Provider store = {store}>\n\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t\t<App />\n\t\t\t</DndProvider>\n\t\t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}