{"version":3,"sources":["components/header/header.tsx","dnd-types/item-types.ts","components/word-card/word-card.tsx","store/selector.ts","store/actions.ts","utils.tsx","svg/line.svg","components/checking-area/checking-area.tsx","components/source-area/source-area.tsx","svg/phrase-outline.svg","components/example-area/example-text.tsx","svg/person.svg","components/example-area/example-area.tsx","components/check-button/speak-button.tsx","components/check-button/check-button.tsx","App.tsx","mocks/cards.js","store/reducer/word-reducer.tsx","store/reducer/root-reducer.tsx","index.tsx"],"names":["Title","styled","h1","props","isHighlighted","Header","CardType","WordContainer","div","WordCard","memo","id","text","moveCard","findCard","originalIndex","index","useDrag","type","item","collect","monitor","opacity","isDragging","end","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","ref","node","style","getBaseCards","state","cards","baseCards","getSourceCards","sourceCards","getCheckCards","checkCards","getOriginText","originText","createUserKeySelector","createSelector","Number","map","it","join","createTextForSpeechSelector","ActionType","addWordToCheckArea","createAction","card","atIndex","payload","addWordToSourceArea","makeWordMoving","moveWordInsideSourceArea","newIndex","moveWordInsideCheckArea","find","indexOf","CheckingContainer","LineWrapper","topPosition","linesPositions","CheckingArea","useSelector","dispatch","useDispatch","addWordToCheckAreaAction","moveWordInsideCheckAreaAction","useCallback","findOriginCard","originCard","filter","findCheckCard","ind","src","line","width","height","alt","SourceContainer","SourceArea","moveWordInsideSourceAreaAction","findSourceCard","movingTimeout","setTimeout","clearTimeout","addWordToSourceAreaAction","ExampleTextWrapper","OriginText","TextCloud","ExampleText","phraseOutline","ExampleWrapper","ExampleArea","person","SpeakButton","volume","vol","ButtonWrapper","Button","button","BaseMessage","ErrorMessage","CorrectMessage","CheckButton","userKey","textForSpeech","controlKey","correctAnswerKey","useState","errorOpacity","correctOpacity","messageOpacity","setMessageOpacity","sayElementStyles","display","messageTimeout","position","top","right","disabled","name","onClick","prevState","validateUserMessage","className","MainWrapper","App","mockCards","updateWordsList","words","word","newList","slice","activeCardIndex","findIndex","splice","removeWordFromList","initState","wordCardReducer","createReducer","builder","addCase","action","push","addWordToList","length","addWordToSourceList","sort","a","b","makeSortingMoving","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"uMAOMA,EAAQC,IAAOC,GAAV,gQAEK,SAAAC,GAAK,OAAIA,EAAMC,cAAgB,OAAS,YASzC,SAASC,EAAOF,GAC9B,OACC,cAACH,EAAD,CAAOI,cAAiBD,EAAMC,cAA9B,qC,0CCpBWE,EACN,OCKDC,EAAgBN,IAAOO,IAAV,gaA+BNC,EAA0BC,gBAAK,YAA+C,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SACxEC,EAAgBD,EAASH,GAAIK,MACnC,EAA4BC,aAC3B,iBAAO,CACNC,KAAMZ,EACNa,KAAM,CAAER,KAAII,iBACZK,QAAS,SAACC,GAAD,MAAc,CACtBC,QAASD,EAAQE,aAAe,EAAI,IAErCC,IAAK,SAACL,EAAME,GACX,IAAYI,EAA6BN,EAAjCR,GAAeI,EAAkBI,EAAlBJ,cACPM,EAAQK,WAEvBb,EAASY,EAAWV,OAIvB,CAACJ,EAAII,EAAeF,IAfrB,mBAASS,EAAT,KAASA,QAAWK,EAApB,KAkBA,EAAiBC,aAChB,iBAAO,CACNC,OAAQvB,EACRwB,QAAS,kBAAM,GACfC,MAHM,YAG0B,IAApBC,EAAmB,EAAvBrB,GACP,GAAIqB,IAAcrB,EAAI,CACrB,IAAesB,EAAcnB,EAASH,GAA9BK,MACRH,EAASmB,EAAWC,QAKvB,CAACnB,EAAUD,IAZHqB,EAAT,oBAeA,OACC,cAAC3B,EAAD,CAAe4B,IAAK,SAACC,GAAD,OAAUT,EAAKO,EAAKE,KAAQC,MAAS,CAACf,WAA1D,SACEV,O,QCvES0B,EAAe,SAACC,GAAD,OAAgCA,EAAMC,MAAMC,WAC3DC,EAAiB,SAACH,GAAD,OAAgCA,EAAMC,MAAMG,aAC7DC,EAAgB,SAACL,GAAD,OAAgCA,EAAMC,MAAMK,YAC5DC,EAAgB,SAACP,GAAD,OAAgCA,EAAMC,MAAMO,YAE5DC,EAAwBC,YACpCL,GACA,SAACJ,GAAD,OAAyBU,OAAOV,EAAMW,KAAI,SAACC,GAAD,OAAoBA,EAAGzC,MAAI0C,KAAK,QAG9DC,EAA8BL,YAC1CL,GACA,SAACJ,GAAD,OAAyBA,EAAMW,KAAI,SAACC,GAAD,OAAoBA,EAAGxC,QAAMyC,KAAK,Q,QCbzDE,EACG,2BADHA,EAEI,4BAFJA,EAGK,+BAHLA,EAIM,gCAJNA,EAKA,sBAGAC,EAAqBC,YAAaF,GAA0B,SAACG,EAAMC,GAAP,MAAoB,CAC5FC,QAAS,CAACF,OAAMC,eAGJE,EAAsBJ,YAAaF,GAA2B,SAACG,GAAD,MAAW,CACrFE,QAAS,CAACF,YAGEI,EAAiBL,YAAaF,GAE9BQ,EAA2BN,YAAaF,GAA6B,SAACG,EAAMM,GAAP,MAAqB,CACtGJ,QAAS,CAACF,OAAMM,gBAGJC,EAA0BR,YAAaF,GAA4B,SAACG,EAAMM,GAAP,MAAqB,CACpGJ,QAAS,CAACF,OAAMM,gBCZJlD,EAAW,SAACH,EAAY6B,GACpC,IAAMkB,EAA+BlB,EAAM0B,MAAK,SAACd,GAAD,OAAkC,OAAFA,QAAE,IAAFA,OAAA,EAAAA,EAAIzC,MAAOA,KAE3F,MAAO,CAAC+C,OAAM1C,MADQ0C,EAAOlB,EAAM2B,QAAQT,IAAS,ICftC,MAA0B,iCCYnCU,EAAoBnE,IAAOO,IAAV,gMAWjB6D,EAAcpE,IAAOO,IAAV,4EAET,SAACL,GAAD,OAAWA,EAAMmE,eAInBC,EAA2B,CAAC,OAAQ,OAAQ,SAErCC,EAAmB9D,gBAAK,WACpC,IAAM+B,EAAYgC,YAAYnC,GACxBO,EAAa4B,YAAY7B,GAEzB8B,EAAWC,cAEXC,EAA2B,SAAClB,EAAkBC,GACnDe,EAASlB,EAAmBE,EAAMC,KAG7BkB,EAAgCC,uBAAY,SAACpB,EAA8BM,GAChFU,EAAST,EAAwBP,EAAMM,MACtC,CAACU,IAEGK,EAAiB,SAACpE,GACvB,IAAMqE,EAAavC,EAAUwC,QAAO,SAAC7B,GAAD,OAAoBA,EAAGzC,KAAOA,KAAI,GACtE,MAAO,CACNqE,aACAhE,MAAOyB,EAAU0B,QAAQa,KAIrBE,EAAgBJ,uBAAY,SAACnE,GAAD,OAAeG,EAASH,EAAIkC,KAAa,CAACA,IAEtEhC,EAAWiE,uBAAY,SAACnE,EAAYgD,GACxC,IAAOD,EAAQwB,EAAcvE,GAAtB+C,KAEP,GAAIA,EACHmB,EAA8BnB,EAAMC,OAC9B,CACN,IAAOqB,EAAcD,EAAepE,GAA7BqE,WACPJ,EAAyBI,EAAYrB,MAGvC,CAACuB,EAAeL,IAGjB,EAAiBjD,aAAQ,iBAAO,CAC/BC,OAAQvB,EACR4B,KAF+B,SAE1Bf,GAEJ,IADe+D,EAAc/D,EAAKR,IAA3B+C,KACI,CACV,IAAOsB,EAAcD,EAAe5D,EAAKR,IAAlCqE,WACPJ,EAAyBI,QAK5B,CAACnC,IAXQX,EAAT,oBAaA,OACC,eAACkC,EAAD,CAAmBjC,IAAKD,EAAxB,UACEqC,EAAepB,KAAI,SAACC,EAAI+B,GAAL,OACnB,cAACd,EAAD,CAAaC,YAAelB,EAA5B,SACA,qBAAKgC,IAAKC,EAAMC,MAAM,MAAMC,OAAO,IAAIC,IAAI,eADJL,MAIvCtC,EAAWM,KAAI,SAACO,GAAD,OACf,cAACjD,EAAD,CAECE,GAAI+C,EAAK/C,GACTC,KAAM8C,EAAK9C,KACXC,SAAUA,EACVC,SAAUoE,GAJLxB,EAAK/C,aC/ET8E,EAAkBxF,IAAOO,IAAV,0PAaRkF,GAAiBhF,gBAAK,WAClC,IAAMiC,EAAc8B,YAAY/B,GAC1BD,EAAYgC,YAAYnC,GAExBoC,EAAWC,cACXgB,EAAiCb,uBAAY,SAACpB,EAA8BM,GACjFU,EAASX,EAAyBL,EAAMM,MACvC,CAACU,IAUGkB,EAAiBd,uBAAY,SAACnE,GAAD,OAAQG,EAASH,EAAIgC,KAAa,CAACA,IAUhE9B,EAAWiE,uBAAY,SAACnE,EAAYgD,GACxC,IAAOD,EAAQkC,EAAejF,GAAvB+C,KAEHA,GACHiC,EAA+BjC,EAAMC,KAGvC,CAACiC,EAAgBD,IAGdE,EAA+CC,YAAW,iBAAM,KAAI,KAExE,EAAiBlE,aAAQ,iBAAO,CAC/BC,OAAQvB,EACR4B,KAF+B,SAE1Bf,GAEJ,IADeyE,EAAezE,EAAKR,IAA5B+C,KACI,CACVqC,aAAaF,GACb,MA1BoB,SAAClF,GACvB,IAAMqE,EAAavC,EAAUwC,QAAO,SAAC7B,GAAD,OAAoBA,EAAGzC,KAAOA,KAAI,GACtE,MAAO,CACNqE,aACAhE,MAAOyB,EAAU0B,QAAQa,IAsBHD,CAAe5D,EAAKR,KApCV,SAAC+C,GAClCgB,EAASb,EAAoBH,IAoC3BsC,CADA,EAAOhB,YAGPa,EAAgBC,YAAW,WAlC7BpB,EAASZ,OAoCJ,UAKN,CAACnB,IAhBQT,EAAT,oBAkBA,OACC,cAACuD,EAAD,CAAiBtD,IAAKD,EAAtB,SACES,EAAYQ,KAAI,SAACO,GAAD,OAChB,cAACjD,EAAD,CAECE,GAAI+C,EAAK/C,GACTC,KAAM8C,EAAK9C,KACXC,SAAUA,EACVC,SAAU8E,GAJLlC,EAAK/C,YCrFA,OAA0B,2CCOnCsF,GAAqBhG,IAAOO,IAAV,sEAKlB0F,GAAajG,IAAOO,IAAV,sNAWV2F,GAAYlG,IAAOO,IAAV,8EAMR,SAAS4F,KACf,IAAMrD,EAAa0B,YAAY3B,GAE/B,OACC,eAACmD,GAAD,WACC,cAACC,GAAD,UAAanD,EAAWnC,OACxB,cAACuF,GAAD,UACC,qBAAKf,IAAKiB,GAAef,MAAM,MAAMC,OAAO,KAAKC,IAAI,iBCpC1C,I,GAAA,OAA0B,mCCMnCc,GAAiBrG,IAAOO,IAAV,gJAQL,SAAS+F,KACvB,OACC,eAACD,GAAD,WACC,qBAAKlB,IAAKoB,GAAQlB,MAAM,MAAMC,OAAO,MAAMC,IAAI,WAC/C,cAACY,GAAD,O,wCCHYK,GARK,SAACtG,GAAD,OACnB,cAAC,aAAD,CACCS,KAAMT,EAAMS,KACZ8F,OAAUvG,EAAMwG,IAFjB,8BCDKC,GAAgB3G,IAAOO,IAAV,kKASbqG,GAAS5G,IAAO6G,OAAV,g2BAgCNC,GAAc9G,IAAOO,IAAV,gRAQL,SAACL,GAAD,OAAWA,EAAMmB,WAIvB0F,GAAe/G,YAAO8G,GAAP9G,CAAH,iDAIZgH,GAAiBhH,YAAO8G,GAAP9G,CAAH,+CAIb,SAASiH,KACf,IAAMnE,EAAa0B,YAAY3B,GACzBqE,EAAU1C,YAAYzB,GACtBoE,EAAgB3C,YAAYnB,GAC5B+D,EAAatE,EAAWuE,iBAE9B,EAA4CC,mBAAS,CACpDC,aAAc,IACdC,eAAgB,MAFjB,mBAAOC,EAAP,KAAuBC,EAAvB,KAKMC,EAAmB,CACxBC,QAA2C,MAAlCH,EAAeD,eAAyB,QAAU,QAGxDK,EAAgDhC,YAAW,iBAAM,KAAI,KAuCzE,OACC,gCACC,qBAAKzD,MAAS,CAACwF,QAASD,EAAiBC,QAASE,SAAU,WAAYC,IAAK,MAAOC,MAAO,OAA3F,SACC,cAAC,GAAD,CAAatB,IAAO,EAAG/F,KAAQwG,MAEhC,eAACR,GAAD,WACC,cAACI,GAAD,CAAc1F,QAAWoG,EAAeF,aAAxC,8BACA,cAACP,GAAD,CAAgB3F,QAAWoG,EAAeD,eAA1C,oCACA,cAACZ,GAAD,CAAQqB,SAAwB,IAAZf,EAAegB,KAAK,cAAcC,QAb/B,WACzBrC,aAAa+B,GAjCc,SAACT,EAAoBF,GAC5CE,IAAeF,EAElBQ,GAAkB,SAACU,GAAD,oBAAC,gBACfA,GADc,IAEjBZ,eAAgB,IAChBD,aAAc,UAWfG,GAAkB,SAACU,GAAD,oBAAC,gBACfA,GADc,IAEjBb,aAAc,IACdC,eAAgB,SAEjBK,EAAiBhC,YAAW,WAC3B6B,GAAkB,SAACU,GAAD,oBAAC,gBACfA,GADc,IAEjBb,aAAc,IACdC,eAAgB,WAEf,MAMJa,CAAoBjB,EAAYF,IAWsDoB,UAAY,eAAhG,yBC1HJ,IAAMC,GAAcvI,IAAOO,IAAV,+cA6BFiI,OAZf,WACC,OACC,eAACD,GAAD,WACC,cAACnI,EAAD,IACA,cAACkG,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAACW,GAAD,Q,QChCUwB,GAAY,CACvB,CACA/H,GAAI,EACJC,KAAM,OAEP,CACCD,GAAI,EACJC,KAAM,QAEP,CACCD,GAAI,EACJC,KAAM,UAEP,CACCD,GAAI,EACJC,KAAM,OAEP,CACCD,GAAI,EACJC,KAAM,OAEP,CACCD,GAAI,EACJC,KAAM,OAEP,CACCD,GAAI,EACJC,KAAM,QAEP,CACCD,GAAI,EACJC,KAAM,QAEP,CACCD,GAAI,EACJC,KAAM,UC7BR,SAAS+H,GAAgBC,EAAqBC,EAAkB7E,GAC/D,IAAM8E,EAAUF,EAAMG,QAChBC,EAAkBF,EAAQG,WAAU,SAAC7F,GAAD,OAAQA,EAAGzC,KAAOkI,EAAKlI,MAGjE,OAFAmI,EAAQI,OAAOF,EAAiB,GAChCF,EAAQI,OAAOlF,EAAU,EAAG6E,GACrBC,EAoCR,SAASK,GAAmBP,EAAqBC,GAC/C,IAAMC,EAAUF,EAAMG,QACjBC,EAAkBF,EAAQG,WAAU,SAAC7F,GAAD,OAAQA,EAAGzC,KAAOkI,EAAKlI,MAKjE,OAJyB,IAArBqI,GAEHF,EAAQI,OAAOF,EAAiB,GAE1BF,EAGR,IAAMM,GAAwB,CAC7BrG,WDnB6B,CAC7BuE,iBAAkB,OAClB1G,KAAM,6LCkBN6B,UAAWiG,GACX/F,YAAa+F,GACb7F,WAAa,IAwBCwG,GArBSC,YAAcF,IAAW,SAACG,GACjDA,EACEC,QAAQhG,GAAoB,SAACjB,EAAOkH,GACpClH,EAAMM,WArDT,SAAuB+F,EAA0BC,EAAkBlF,GAClE,IAAMmF,EAAUF,EAAMG,QAMtB,OALIpF,GAAuB,IAAZA,EACdmF,EAAQI,OAAOvF,EAAS,EAAGkF,GAE3BC,EAAQY,KAAKb,GAEPC,EA8Cca,CAAcpH,EAAMM,WAAY4G,EAAO7F,QAAQF,KAAM+F,EAAO7F,QAAQD,SACvFpB,EAAMI,YAAcwG,GAAmB5G,EAAMI,YAAa8G,EAAO7F,QAAQF,SAEzE8F,QAAQ3F,GAAqB,SAACtB,EAAOkH,GACrClH,EAAMI,YA/CT,SAA6BiG,EAA0BC,GACrD,IAAMC,EAAUF,EAAMG,QACjB/E,EAAW4E,EAAMgB,OAAShB,EAAMgB,OAAS,EAG/C,OAFAd,EAAQI,OAAOlF,EAAU,EAAG6E,GAErBC,EA0Cee,CAAoBtH,EAAMI,YAAa8G,EAAO7F,QAAQF,MAC1EnB,EAAMM,WAAasG,GAAmB5G,EAAMM,WAAY4G,EAAO7F,QAAQF,SAEvE8F,QAAQ1F,GAAgB,SAACvB,EAAOkH,GAChClH,EAAMI,YA3CT,SAA2BiG,GACzB,IAAME,EAAUF,EAAMG,QAWvB,OATAD,EAAQgB,MAAK,SAACC,EAAGC,GAChB,OAAID,EAAEpJ,GAAKqJ,EAAErJ,GACL,EAEJoJ,EAAEpJ,GAAKqJ,EAAErJ,IACJ,EAEF,KAEDmI,EA+BemB,CAAkB1H,EAAMI,gBAE5C6G,QAAQzF,GAA0B,SAACxB,EAAOkH,GAC1ClH,EAAMI,YAAcgG,GAAgBpG,EAAMI,YAAa8G,EAAO7F,QAAQF,KAAM+F,EAAO7F,QAAQI,aAE3FwF,QAAQvF,GAAyB,SAAC1B,EAAOkH,GACzClH,EAAMM,WAAa8F,GAAgBpG,EAAMM,WAAY4G,EAAO7F,QAAQF,KAAM+F,EAAO7F,QAAQI,gBC5EtFkG,GAAcC,aAAgB,CACnC3H,MAAO6G,KAOOe,GAJDC,YAAe,CAC5BC,QAASJ,KCDVK,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUL,MAASA,GAAnB,SACC,cAACM,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACC,cAAC,GAAD,UAIFC,SAASC,eAAe,W","file":"static/js/main.640bfaf2.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface TitleProps {\n\treadonly isHighlighted?: boolean;\n\t}\n\nconst Title = styled.h1<TitleProps>`\n\tfont-style: normal;\n\tfont-weight: ${props => props.isHighlighted ? \"bold\" : \"normal\"};\n\tfont-size: 36px;\n\tline-height: 42px;\n\tcolor: #252525;\n\ttext-shadow: -2px -4px 3px #FFFFFF, 2px 4px 3px rgba(0, 0, 0, 0.25);\n\talign-self: flex-start;\n\tmargin-bottom: 56px;\n`;\n\nexport default function Header(props: { isHighlighted?: boolean; }) {\n\treturn (\n\t\t<Title isHighlighted = {props.isHighlighted}>Translate this sentence</Title>\n\t);\n}","export const CardType = {\n\tWORD: 'word',\n}","import { FC, memo } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport styled from 'styled-components';\n\nimport { CardType } from \"../../dnd-types/item-types\";\n\nconst WordContainer = styled.div`\n\tpadding: 5px 18px;\n\tmargin-bottom: 15px;\n\tmargin-right: 10px;\n\tcursor: move;\n\tdisplay: block;\n\tfont-size: 18px;\n\tline-height: 21px;\n\tfont-weight: normal;\n\tcolor: #000000;\n\tborder: 1px solid #C9C9C9;\n\tmargin-right: 10px;\n\theight: 30px;\n\tbox-sizing: border-box;\n\tbackground: #FFFFFF;\n\tbox-shadow: 0px 8px 4px -6px rgba(0, 0, 0, 0.25);\n\tborder-radius: 13px;\n`;\n\nexport interface CardProps {\n\tid: number;\n\ttext: string;\n\tmoveCard: (id: number, to: number) => void;\n\tfindCard: (id: number) => { index: number };\n}\n\ninterface Item {\n\tid: number;\n\toriginalIndex: number;\n}\n\nexport const WordCard: FC<CardProps> = memo(function Card({id, text, moveCard, findCard}) {\n\tconst originalIndex = findCard(id).index;\n\tconst [{ opacity }, drag] = useDrag(\n\t\t() => ({\n\t\t\ttype: CardType.WORD,\n\t\t\titem: { id, originalIndex },\n\t\t\tcollect: (monitor) => ({\n\t\t\t\topacity: monitor.isDragging() ? 0 : 1\n\t\t\t}),\n\t\t\tend: (item, monitor) => {\n\t\t\t\tconst { id: droppedId, originalIndex } = item;\n\t\t\t\tconst didDrop = monitor.didDrop();\n\t\t\t\tif (!didDrop) {\n\t\t\t\t\tmoveCard(droppedId, originalIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\t[id, originalIndex, moveCard]\n\t);\n\n\tconst [, drop] = useDrop(\n\t\t() => ({\n\t\t\taccept: CardType.WORD,\n\t\t\tcanDrop: () => false,\n\t\t\thover({ id: draggedId }: Item) {\n\t\t\t\tif (draggedId !== id) {\n\t\t\t\t\tconst { index: overIndex } = findCard(id);\n\t\t\t\t\tmoveCard(draggedId, overIndex);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\t[findCard, moveCard]\n\t);\n\n\treturn (\n\t\t<WordContainer ref={(node) => drag(drop(node))} style = {{opacity}}>\n\t\t\t{text}\n\t\t</WordContainer>\n\t);\n});","import { createSelector } from 'reselect';\nimport {SingleWord, WordsState} from '../utils';\n\nexport const getBaseCards = (state: {cards: WordsState}) => state.cards.baseCards;\nexport const getSourceCards = (state: {cards: WordsState}) => state.cards.sourceCards;\nexport const getCheckCards = (state: {cards: WordsState}) => state.cards.checkCards;\nexport const getOriginText = (state: {cards: WordsState}) => state.cards.originText;\n\nexport const createUserKeySelector = createSelector(\n\tgetCheckCards,\n\t(cards: SingleWord[]) => Number(cards.map((it: SingleWord) => it.id).join('')\n));\n\nexport const createTextForSpeechSelector = createSelector(\n\tgetCheckCards,\n\t(cards: SingleWord[]) => cards.map((it: SingleWord) => it.text).join(' ')\n);","import {createAction} from '@reduxjs/toolkit';\n\nexport const ActionType = {\n\tWORD_TO_CHECK: 'data/moveWordToCheckArea',\n\tWORD_TO_SOURCE: 'data/moveWordToSourceArea',\n\tWORD_INTO_CHECK: 'data/moveWordInsideCheckArea',\n\tWORD_INTO_SOURCE: 'data/moveWordInsideSourceArea',\n\tSORT_WORDS: 'data/moveWordMoving',\n};\n\nexport const addWordToCheckArea = createAction(ActionType.WORD_TO_CHECK, (card, atIndex) => ({\n\tpayload: {card, atIndex},\n}));\n\nexport const addWordToSourceArea = createAction(ActionType.WORD_TO_SOURCE, (card) => ({\n\tpayload: {card},\n}));\n\nexport const makeWordMoving = createAction(ActionType.SORT_WORDS);\n\nexport const moveWordInsideSourceArea = createAction(ActionType.WORD_INTO_SOURCE, (card, newIndex) => ({\n\tpayload: {card, newIndex},\n}));\n\nexport const moveWordInsideCheckArea = createAction(ActionType.WORD_INTO_CHECK, (card, newIndex) => ({\n\tpayload: {card, newIndex},\n}));\n\n\n","\nexport interface SingleWord {\n  readonly id: number,\n\treadonly text: string,\n}\n\nexport interface WordsState {\n\tbaseCards: SingleWord[], \n\tsourceCards: SingleWord[] | [], \n\tcheckCards: SingleWord[] | [], \n\toriginText: {correctAnswerKey: number, text: string}\n}\n\nexport const findCard = (id: number, cards: SingleWord[]): {card: SingleWord | undefined, index: number} => {\n\tconst card: SingleWord | undefined = cards.find((it: SingleWord | undefined) => it?.id === id);\n\tconst index: number = card ? cards.indexOf(card) : -1;\n\treturn {card, index}\n}","export default __webpack_public_path__ + \"static/media/line.02399064.svg\";","import { FC, memo, useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport { WordCard } from '../word-card/word-card';\nimport { CardType } from '../../dnd-types/item-types';\nimport {getBaseCards, getCheckCards} from '../../store/selector';\nimport {moveWordInsideCheckArea, addWordToCheckArea} from '../../store/actions';\nimport {findCard, SingleWord} from '../../utils';\nimport line from '../../svg/line.svg';\n\nconst CheckingContainer = styled.div`\n\twidth: 100%;\n\tmin-height: 100px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tmargin-bottom: 0;\n\tposition: relative;\n\tpadding: 40px 0;\n`;\n\nconst LineWrapper = styled.div<{topPosition: string}>`\n\tposition: absolute;\n\ttop: ${(props) => props.topPosition};\n\tleft: 0;\n`;\n\nconst linesPositions: string[] = ['15px', '65px', '115px'];\n\nexport const CheckingArea: FC = memo(function CheckingArea() {\n\tconst baseCards = useSelector(getBaseCards);\n\tconst checkCards = useSelector(getCheckCards);\n\n\tconst dispatch = useDispatch();\n\n\tconst addWordToCheckAreaAction = (card: SingleWord, atIndex?: number): void => {\n\t\tdispatch(addWordToCheckArea(card, atIndex));\n\t};\n\n\tconst moveWordInsideCheckAreaAction = useCallback((card: SingleWord | undefined, newIndex: number) => {\n\t\tdispatch(moveWordInsideCheckArea(card, newIndex));\n\t},[dispatch])\n\n\tconst findOriginCard = (id: number): {originCard: SingleWord, index: number} => {\n\t\tconst originCard = baseCards.filter((it: SingleWord) => it.id === id)[0]\n\t\treturn {\n\t\t\toriginCard,\n\t\t\tindex: baseCards.indexOf(originCard),\n\t\t}\n\t}\n\n\tconst findCheckCard = useCallback((id: number)=> findCard(id, checkCards), [checkCards]);\n\n\tconst moveCard = useCallback((id: number, atIndex: number): void => {\n\t\t\tconst {card} = findCheckCard(id);\n\n\t\t\tif (card) {\n\t\t\t\tmoveWordInsideCheckAreaAction(card, atIndex);\n\t\t\t} else {\n\t\t\t\tconst {originCard} = findOriginCard(id);\n\t\t\t\taddWordToCheckAreaAction(originCard, atIndex);\n\t\t\t}\n\t\t},\n\t\t[findCheckCard, moveWordInsideCheckAreaAction],\n\t)\n\n\tconst [, drop] = useDrop(() => ({ \n\t\taccept: CardType.WORD ,\n\t\tdrop(item: SingleWord) {\n\t\t\tconst {card} = findCheckCard(item.id);\n\t\t\tif (!card) {\n\t\t\t\tconst {originCard} = findOriginCard(item.id);\n\t\t\t\taddWordToCheckAreaAction(originCard);\n\t\t\t}\n\t\t\treturn undefined\n\t\t}\n\t}),\n\t[checkCards]);\n\n\treturn (\n\t\t<CheckingContainer ref={drop}>\n\t\t\t{linesPositions.map((it, ind) => (\n\t\t\t\t<LineWrapper topPosition = {it} key = {ind} /*lines are static*/> \n\t\t\t\t<img src={line} width=\"478\" height=\"2\" alt=\"word-line\" />\n\t\t\t</LineWrapper>\n\t\t\t))}\n\t\t\t{checkCards.map((card: SingleWord) => (\n\t\t\t\t<WordCard\n\t\t\t\t\tkey={card.id}\n\t\t\t\t\tid={card.id}\n\t\t\t\t\ttext={card.text}\n\t\t\t\t\tmoveCard={moveCard}\n\t\t\t\t\tfindCard={findCheckCard}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</CheckingContainer>\n\t)\n})","import { FC, memo, useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport { WordCard } from '../word-card/word-card';\nimport { CardType } from '../../dnd-types/item-types';\nimport {getSourceCards, getBaseCards} from '../../store/selector';\nimport {moveWordInsideSourceArea, addWordToSourceArea, makeWordMoving} from '../../store/actions';\nimport {findCard, SingleWord} from '../../utils';\n\nconst SourceContainer = styled.div`\n\twidth: 95%;\n\tmin-height: 125px;\n\tpadding: 10px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tmargin-bottom: 70px;\n\tbox-sizing: border-box;\n\tborder: 2px solid #4B4B4B;\n\tborder-radius: 15px;\n`;\n\nexport const SourceArea: FC = memo(function SourceArea() {\n\tconst sourceCards = useSelector(getSourceCards);\n\tconst baseCards = useSelector(getBaseCards);\n\n\tconst dispatch = useDispatch();\n\tconst moveWordInsideSourceAreaAction = useCallback((card: SingleWord | undefined, newIndex: number) => {\n\t\tdispatch(moveWordInsideSourceArea(card, newIndex));\n\t},[dispatch])\n\n\tconst addWordToSourceAreaAction = (card: SingleWord) => {\n\t\tdispatch(addWordToSourceArea(card));\n\t};\n\n\tconst sortWordAction = () => {\n\t\tdispatch(makeWordMoving());\n\t};\n\n\tconst findSourceCard = useCallback((id) => findCard(id, sourceCards),[sourceCards]);\n\n\tconst findOriginCard = (id: number) => {\n\t\tconst originCard = baseCards.filter((it: SingleWord) => it.id === id)[0]\n\t\treturn {\n\t\t\toriginCard,\n\t\t\tindex: baseCards.indexOf(originCard),\n\t\t}\n\t};\n\n\tconst moveCard = useCallback((id: number, atIndex: number) => {\n\t\t\tconst {card} = findSourceCard(id);\n\t\t\t\n\t\t\tif (card) {\n\t\t\t\tmoveWordInsideSourceAreaAction(card, atIndex);\n\t\t\t}\n\t\t},\n\t\t[findSourceCard, moveWordInsideSourceAreaAction],\n\t)\n\n\tlet movingTimeout: ReturnType<typeof setTimeout> = setTimeout(() => '', 1000);\n\n\tconst [, drop] = useDrop(() => ({ \n\t\taccept: CardType.WORD ,\n\t\tdrop(item: SingleWord) {\n\t\t\tconst {card} = findSourceCard(item.id);\n\t\t\tif (!card) {\n\t\t\t\tclearTimeout(movingTimeout);\n\t\t\t\tconst {originCard} = findOriginCard(item.id);\n\t\t\t\taddWordToSourceAreaAction(originCard);\n\n\t\t\t\tmovingTimeout = setTimeout(() => {\n\t\t\t\t\tsortWordAction();\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t\treturn undefined\n\t\t}\n\t}),\n\t[sourceCards]);\n\n\treturn (\n\t\t<SourceContainer ref={drop}>\n\t\t\t{sourceCards.map((card: SingleWord) => (\n\t\t\t\t<WordCard\n\t\t\t\t\tkey={card.id}\n\t\t\t\t\tid={card.id}\n\t\t\t\t\ttext={card.text}\n\t\t\t\t\tmoveCard={moveCard}\n\t\t\t\t\tfindCard={findSourceCard}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</SourceContainer>\n\t)\n})","export default __webpack_public_path__ + \"static/media/phrase-outline.edca4a39.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport {useSelector} from 'react-redux';\n\nimport {getOriginText} from '../../store/selector';\nimport phraseOutline from '../../svg/phrase-outline.svg';\n\nconst ExampleTextWrapper = styled.div`\n\tposition: relative;\n\tmax-width: 50%;\n`;\n\nconst OriginText = styled.div`\n\tfont-style: normal;\n\tfont-weight: 400;\n\tfont-size: 18px;\n\tline-height: 21px;\n\tcolor: #000000;\n\tmargin-left: 10px;\n\tmargin-top: 10px;\n\ttext-decoration: underline dotted;\n`;\n\nconst TextCloud = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: -25px;\n`;\n\nexport function ExampleText() {\n\tconst originText = useSelector(getOriginText);\n\n\treturn (\n\t\t<ExampleTextWrapper>\n\t\t\t<OriginText>{originText.text}</OriginText>\n\t\t\t<TextCloud>\n\t\t\t\t<img src={phraseOutline} width=\"307\" height=\"92\" alt=\"outline\" />\n\t\t\t</TextCloud>\n\t\t</ExampleTextWrapper>\n\t);\n}","export default __webpack_public_path__ + \"static/media/person.d70a827e.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport {ExampleText} from './example-text';\nimport person from '../../svg/person.svg';\n\nconst ExampleWrapper = styled.div`\n\twidth: 100%;\n\tmargin-bottom: 10px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n`;\n\nexport default function ExampleArea() {\n\treturn (\n\t\t<ExampleWrapper>\n\t\t\t<img src={person} width=\"187\" height=\"200\" alt=\"person\" />\n\t\t\t<ExampleText/>\n\t\t</ExampleWrapper>\n\t);\n}","import { SayButton } from 'react-say';\n\ninterface SpeakProps {\n\ttext: string;\n\tvol: number;\n}\n\nconst SpeakButton = (props: SpeakProps) =>\n\t<SayButton\n\t\ttext={props.text}\n\t\tvolume = {props.vol}\n\t>\n\t\tClick to listen\n\t</SayButton>\n\nexport default SpeakButton;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {useSelector} from 'react-redux';\n\nimport {getOriginText, createUserKeySelector, createTextForSpeechSelector} from '../../store/selector';\nimport SpeakButton from './speak-button';\n\nconst ButtonWrapper = styled.div`\n\twidth: 100%;\n\tmargin-bottom: 50px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tposition: relative;\n`;\n\nconst Button = styled.button`\n\twidth: 470px;\n\theight: 68px;\n\tfont-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\tfont-style: normal;\n\tfont-weight: bold;\n\tfont-size: 18px;\n\tline-height: 21px;\n\ttext-align: center;\n\tcolor: #000000;\n\tborder-radius: 88px;\n\tborder: 1px solid #C9C9C9;\n\tbox-sizing: border-box;\n\tbackground: linear-gradient(91.2deg, #FFFFFF 0%, #F2F2F2 100%);\n\tbox-shadow: -2px -4px 8px #FFFFFF, 2px 4px 8px rgba(0, 0, 0, 0.2);\n\tcursor: pointer;\n\topacity: 1;\n\tmargin-top: 10px;\n\n\t&:active {\n\t\tbackground: linear-gradient(91.2deg, #FFFFFF 0%, #F2F2F2 100%);\n\t\tbox-shadow: inset -2px -4px 12px #FFFFFF, inset 2px 4px 8px rgba(0, 0, 0, 0.2);\n\t}\n\n\t&:disabled {\n\t\topacity: 0.5;\n\t\tcursor: auto;\n\t}\n`;\n\nconst BaseMessage = styled.div<{opacity: string}>`\n\tposition: absolute;\n\ttop: -55px;\n\tfont-style: normal;\n\tfont-weight: normal;\n\tfont-size: 24px;\n\tline-height: 28px;\n\tmargin-bottom: 27px;\n\topacity: ${(props) => props.opacity};\n\ttext-shadow: -1px -2px 2px #FFFFFF, 1px 2px 2px rgba(91, 13, 13, 0.5);\n`;\n\nconst ErrorMessage = styled(BaseMessage)`\n\tcolor: #FF0000;\n`;\n\nconst CorrectMessage = styled(BaseMessage)`\n\tcolor: green;\n`;\n\nexport function CheckButton() {\n\tconst originText = useSelector(getOriginText);\n\tconst userKey = useSelector(createUserKeySelector);\n\tconst textForSpeech = useSelector(createTextForSpeechSelector);\n\tconst controlKey = originText.correctAnswerKey;\n\n\tconst [messageOpacity, setMessageOpacity] = useState({\n\t\terrorOpacity: '0',\n\t\tcorrectOpacity: '0',\n\t});\n\n\tconst sayElementStyles = {\n\t\tdisplay: messageOpacity.correctOpacity === '1' ? 'block' : 'none',\n\t}\n\n\tlet messageTimeout: ReturnType<typeof setTimeout> = setTimeout(() => '', 2000);\n\n\tconst validateUserMessage = (controlKey: number, userKey: number): void => {\n\t\tif (controlKey === userKey) {\n\t\t\t// console.log(\"correct answer!\");\n\t\t\tsetMessageOpacity((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tcorrectOpacity: '1',\n\t\t\t\terrorOpacity: '0',\n\t\t\t}));\n\t\t\t// messageTimeout = setTimeout(() => {\n\t\t\t// \tsetMessageOpacity((prevState) => ({\n\t\t\t// \t\t...prevState,\n\t\t\t// \t\terrorOpacity: '0',\n\t\t\t// \t\tcorrectOpacity: '0',\n\t\t\t// \t}));\n\t\t\t// }, 2500);\n\t\t} else {\n\t\t\t// console.log(\"wrong answer!\");\n\t\t\tsetMessageOpacity((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\terrorOpacity: '1',\n\t\t\t\tcorrectOpacity: '0',\n\t\t\t}));\n\t\t\tmessageTimeout = setTimeout(() => {\n\t\t\t\tsetMessageOpacity((prevState) => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\terrorOpacity: '0',\n\t\t\t\t\tcorrectOpacity: '0',\n\t\t\t\t}));\n\t\t\t}, 2000);\n\t\t}\n\t}\n\n\tconst handleButtonClick = (): void => {\n\t\tclearTimeout(messageTimeout);\n\t\tvalidateUserMessage(controlKey, userKey);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div style = {{display: sayElementStyles.display, position: 'absolute', top: '82%', right: '40%'}}>\n\t\t\t\t<SpeakButton vol = {1} text = {textForSpeech}/>\n\t\t\t</div>\n\t\t\t<ButtonWrapper>\n\t\t\t\t<ErrorMessage opacity = {messageOpacity.errorOpacity}>Something wrong!</ErrorMessage>\n\t\t\t\t<CorrectMessage opacity = {messageOpacity.correctOpacity}>The answer is correct!</CorrectMessage>\n\t\t\t\t<Button disabled = {userKey === 0} name=\"checkButton\" onClick = {handleButtonClick} className = 'check-button'>Check</Button>\n\t\t\t</ButtonWrapper>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './components/header/header';\nimport {CheckingArea} from './components/checking-area/checking-area';\nimport {SourceArea} from './components/source-area/source-area';\nimport ExampleArea from './components/example-area/example-area';\nimport {CheckButton} from './components/check-button/check-button';\n\nconst MainWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tmargin: 0 auto 0 auto;\n\twidth: 482px;\n\tbackground: #E5E5E5;\n\tbox-sizing: border-box;\n\tfont-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\tborder: 2px solid #4B4B4B;\n\tborder-radius: 15px;\n\tposition: relative;\n`;\n\nfunction App() {\n\treturn (\n\t\t<MainWrapper>\n\t\t\t<Header/>\n\t\t\t<ExampleArea/>\n\t\t\t<CheckingArea/>\n\t\t\t<SourceArea/>\n\t\t\t<CheckButton/>\n\t\t</MainWrapper>\n\t\t);\n\t}\n\nexport default App;\n","export const mockCards = [\n  {\n\t\tid: 1,\n\t\ttext: 'ago',\n\t},\n\t{\n\t\tid: 2,\n\t\ttext: 'made',\n\t},\n\t{\n\t\tid: 3,\n\t\ttext: 'Skyrim',\n\t},\n\t{\n\t\tid: 4,\n\t\ttext: 'ten',\n\t},\n\t{\n\t\tid: 5,\n\t\ttext: 'two',\n\t},\n\t{\n\t\tid: 6,\n\t\ttext: 'was',\n\t},\n\t{\n\t\tid: 7,\n\t\ttext: 'were',\n\t},\n\t{\n\t\tid: 8,\n\t\ttext: 'year',\n\t},\n\t{\n\t\tid: 9,\n\t\ttext: 'years',\n\t},\n];\n\nexport const mockOriginText = {\n\tcorrectAnswerKey: 362491,\n\ttext: 'Игра Скайрим вышла десять лет назад',\n};","import {createReducer} from '@reduxjs/toolkit';\n\nimport {addWordToCheckArea, addWordToSourceArea, moveWordInsideSourceArea, moveWordInsideCheckArea, makeWordMoving} from '../actions';\nimport {mockCards, mockOriginText} from '../../mocks/cards';\nimport {SingleWord, WordsState} from '../../utils';\n\nfunction updateWordsList(words: SingleWord[], word: SingleWord, newIndex: number) {\n\tconst newList = words.slice();\n\tconst activeCardIndex = newList.findIndex((it) => it.id === word.id);\n\tnewList.splice(activeCardIndex, 1);\n\tnewList.splice(newIndex, 0, word);\n\treturn newList;\n}\n\nfunction addWordToList(words: SingleWord[] | [], word: SingleWord, atIndex?: number) {\n\tconst newList = words.slice();\n\tif (atIndex || atIndex === 0) {\n\t\tnewList.splice(atIndex, 0, word);\n\t} else {\n\t\tnewList.push(word);\n\t}\n\treturn newList;\n}\n\nfunction addWordToSourceList(words: SingleWord[] | [], word: SingleWord) {\n  const newList = words.slice();\n\tconst newIndex = words.length ? words.length : 0;\n\tnewList.splice(newIndex, 0, word);\n\n\treturn newList;\n}\n\nfunction makeSortingMoving(words: SingleWord[]) {\n  const newList = words.slice();\n\n\tnewList.sort((a, b) => {\n\t\tif (a.id > b.id) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.id < b.id) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn newList;\n}\n\nfunction removeWordFromList(words: SingleWord[], word: SingleWord) {\n  const newList = words.slice();\n\tconst activeCardIndex = newList.findIndex((it) => it.id === word.id);\n\tif (activeCardIndex !== -1)\n\t{\n\t\tnewList.splice(activeCardIndex, 1);\n\t}\n\treturn newList;\n}\n\nconst initState: WordsState = {\n\toriginText: mockOriginText,\n\tbaseCards: mockCards,\n\tsourceCards: mockCards,\n\tcheckCards : []\n}\n\nconst wordCardReducer = createReducer(initState, (builder) => {\n\tbuilder\n\t\t.addCase(addWordToCheckArea, (state, action) => {\n\t\t\tstate.checkCards = addWordToList(state.checkCards, action.payload.card, action.payload.atIndex);\n\t\t\tstate.sourceCards = removeWordFromList(state.sourceCards, action.payload.card);\n\t\t})\n\t\t.addCase(addWordToSourceArea, (state, action) => {\n\t\t\tstate.sourceCards = addWordToSourceList(state.sourceCards, action.payload.card);\n\t\t\tstate.checkCards = removeWordFromList(state.checkCards, action.payload.card);\n\t\t})\n\t\t.addCase(makeWordMoving, (state, action) => {\n\t\t\tstate.sourceCards = makeSortingMoving(state.sourceCards)\n\t\t})\n\t\t.addCase(moveWordInsideSourceArea, (state, action) => {\n\t\t\tstate.sourceCards = updateWordsList(state.sourceCards, action.payload.card, action.payload.newIndex);\n\t\t})\n\t\t.addCase(moveWordInsideCheckArea, (state, action) => {\n\t\t\tstate.checkCards = updateWordsList(state.checkCards, action.payload.card, action.payload.newIndex);\n\t\t});\n});\n\nexport default wordCardReducer;","import { combineReducers } from 'redux';\nimport {configureStore} from '@reduxjs/toolkit';\n\nimport wordCardReducer from './word-reducer';\n\nconst rootReducer = combineReducers({\n\tcards: wordCardReducer,\n});\n\nconst store = configureStore({\n\treducer: rootReducer,\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport {Provider} from 'react-redux';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport store from './store/reducer/root-reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<Provider store = {store}>\n\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t\t<App />\n\t\t\t</DndProvider>\n\t\t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}